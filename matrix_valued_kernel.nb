(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226994,       4737]
NotebookOptionsPosition[    225189,       4679]
NotebookOutlinePosition[    225529,       4694]
CellTagsIndexPosition[    225486,       4691]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"k", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "r"}], ")"}], "^", "10"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"429", "*", 
      RowBox[{"r", "^", "4"}]}], "+", 
     RowBox[{"450", "*", 
      RowBox[{"r", "^", "3"}]}], "+", 
     RowBox[{"210", "*", 
      RowBox[{"r", "^", "2"}]}], "+", 
     RowBox[{"50", "*", "r"}], "+", "5"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"k", "=", 
  RowBox[{"TransformedField", "[", 
   RowBox[{
    RowBox[{"\"\<Polar\>\"", "\[Rule]", "\"\<Cartesian\>\""}], ",", "k", ",", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Theta]"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7005426324609327`*^9, 3.700542720412627*^9}, {
  3.700542794784051*^9, 3.7005429193039217`*^9}, {3.700543040834688*^9, 
  3.700543050144059*^9}, {3.7005432173237753`*^9, 3.700543244460457*^9}, {
  3.700543344004624*^9, 3.700543370254261*^9}, {3.700543455579693*^9, 
  3.700543499361415*^9}, {3.700543538063908*^9, 3.700543552221962*^9}, {
  3.700543598033662*^9, 3.700543754455112*^9}, {3.700544106354994*^9, 
  3.700544112340137*^9}, {3.70054466896311*^9, 3.700544685596529*^9}, {
  3.700544737338767*^9, 3.700544738948711*^9}, {3.7005447700936613`*^9, 
  3.700544826696013*^9}, {3.700544978815177*^9, 3.700544988419004*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "r"}], ")"}], "10"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"50", " ", "r"}], "+", 
    RowBox[{"210", " ", 
     SuperscriptBox["r", "2"]}], "+", 
    RowBox[{"450", " ", 
     SuperscriptBox["r", "3"]}], "+", 
    RowBox[{"429", " ", 
     SuperscriptBox["r", "4"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7006155129862328`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], ")"}], "10"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"210", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"429", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"210", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"858", " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"429", " ", 
     SuperscriptBox["y", "4"]}], "+", 
    RowBox[{"50", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], "+", 
    RowBox[{"450", " ", 
     SuperscriptBox["x", "2"], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], "+", 
    RowBox[{"450", " ", 
     SuperscriptBox["y", "2"], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7006155130403233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gradkx", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"k", ",", "x"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gradkxrad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", "gradkx",
      ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gradkxrad", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"gradky", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"k", ",", "y"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gradkyrad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", "gradky",
      ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"gradkyrad", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "\[Rule]", "1"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7006156894554*^9, 3.7006157872242203`*^9}, {
  3.700615908235717*^9, 3.700615957705995*^9}, {3.7006159992831593`*^9, 
  3.700616014679669*^9}, {3.700616047116136*^9, 3.700616047213751*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]]], 
  RowBox[{"26", " ", "x", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}], ")"}], "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"231", " ", 
      SuperscriptBox["x", "4"]}], "+", 
     RowBox[{"5", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"15", "+", 
        RowBox[{"77", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"53", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"15", "+", 
        RowBox[{"154", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"53", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.700616050721925*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"26", " ", "r", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       SuperscriptBox["r", "2"]]}], ")"}], "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"45", " ", 
      SuperscriptBox["r", "2"]}], "+", 
     RowBox[{"231", " ", 
      SuperscriptBox["r", "4"]}], "+", 
     RowBox[{
      SqrtBox[
       SuperscriptBox["r", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"159", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
  SqrtBox[
   SuperscriptBox["r", "2"]]]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.700616051014045*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlnc8Vf8fxwnfpJCRkMpIybgkKqK3CiXJSJEVkpSRlahQVrJJZouIImSU
cM/n2DszK3te7kpmEb/7++fex/NxPue835/X6/V5nyNme9fo5hYmJqZJxs//
/y/cJHXgs1dOEf9T+HHrdB3GelbYdURICcTfhmhq3clAR98kvSwS0oRU5Zla
vjvFSLe1t/CVkDGEffB5MXu7BpnYrRDjhOyga338W9TtbjQk//RspJAnLDX7
XrzgMIne7tIPCRMKguJJZ9rFG4voCXvRoWdC8dDS8GHVRZ8VN72Wlv9rPgOi
xh5nzn7nx7dvPrE4ty8faMKlR34K78MlDWmk6vBi2HqIJJYuK4EL+59TvZVW
DBbtquRb6hL4zk9vwzm+FsPviKxEiUsS+F/2ywTD8WKITm979OiuBN6Of/UY
PlECndvs84s+S+APFJ5srE6VgJZyRcQRpQP4d25+foLGV7jmf7v95BFJ/P53
FUha/AaNdh/U5TkO4VyEkqlG9jKosz8vpLv7EJ4RqRCxJlIGTcegy+LAIbzj
4qF+K60yGIx60Glz6hAu08zvIZlQBpOiZbHzbofwkXr6+8Lj5dAZlNNwoPcQ
fq4yk6v1QQX8qDXQr0yWwodFxUo2oirAaCZ4OjZTCvd8/NJc4V0FUFo/UEw+
S+Fp8Dz7eXMFbFg2q9Q0SOFrxMdnzESIoCbyMHjvihSeX2buNUMkwmhCsGO7
4WF8dzHPMDMzAv4jx7QlNw/jFhFrxpMCCNoz7j7y45DG0+2mmutkEdxz2jfX
tEsal9317Vu4KYKzQfdt1GWl8TNe1i92FSC4zJ7iE2oqjR97afI+Xh4H/jAP
9ZI8adzG6r1l9jAOy65ZqWaGMnjQhT3JybOM6xEVPgLmMvj7YzHdYYs4fFjK
0q+1k8EpXA90nTkqQe5xydDafRncC+mpKB6rBB6Z+ustr2TwCNEl/orISjgu
Y8f2d1oG/zJ+tqVNrQqUHINlAu7K4j3nn8xHnquC0B8bfvfuy+LLeZjARaMq
0DuiJmvhL4sff6hi03CrCtYpGc9ZomXxUj75ZTyuCmjXY16UfZLFv2kKixaS
qqDlIc23kSSLD3w00XJdqIKmPNZ7v+my+N+dL+4QNqrgxeDtBq4VWVx1iLvk
I181mKHlYDE2ObzsHtuFd6eqYWdxz518UTm84v0vj/j4arC//N3Z+YocPriD
kGz0phpM7hW7t5jL4evujtjOj9WQfVhyZJ+tHK4O0+yRqBpm6a9/v3KRw7He
n6+C56qBcilBjO2pHI7Y6+u9NGpgXnsjy7tEDq+682rPNUoN1HP46GywE/Ci
WUdHq+UayCpu8X7AScAzHFTLbzDVQpZzwU8yDwEPtu81c+GvhS9nPpzJEybg
5215UgLVaqFnUrHmswwBb7sWLJgXUQtT727tL9El4HjfZYeihFrQf8ZkEqxP
wAtMxEtL39ZC2eWu4QuXCXjcFWRSXVwLcdHCMyVmBPyq4Z+EvsFaKN4jyLfj
NgEfPO+8i0WuDobeexeWBRLw1vqTN9mP1wGHF2lmNISAY9ocJZyn6wBXJ0ev
PyPgbzSzjAWv1EHUKtNp/hgCbqsx9lzOtw60Pm/crk0l4JdR/oTi0zoYyXHz
SnxNwDVP+R09EVsHk2qF7NfTCLik2p6uM5l1cG3Lm4bv7wk46fgVXtPWOnj1
0/afwmcC3v9Fwtaytw5IG6b++UUEvEn592fbsTrgVM9JlfhCwHOORhs6L9XB
ogNXHqWMgLvIN8YE7K0H0u2k4C01BPx6XuLo00P18I7Md5BQR8AN5OwVIo/U
w9K7Wi/9BgKuKMPSnqhVD+43hJQ8Wgj40kF17k/O9bAtr8wFugn4qfEz9WHe
9ZC/UX1No4eAh7w67+8QWA8JWkYayn0EXIDfmC6RzKj3UZl77ScBP8bs2JZS
Uw9XRIREV8YJuF+F61Pvtnp4kLPnctIkAa+77wVXB+ohJbPyrdw0ATehPcnn
+VUPI5fZXirNEnDvn0nRoXsaIHvLiaBiGsPPhNfn7A82AM62+G+ZTsDZjTI2
zx5pgMzk3UVy8wQ8uSH/7qZ2AzT0u43eXyDg44Elh4YMG0Ak4aBN+CIBl4by
kTKLBmBfPkV4vkTAy0rq9L3cGyD030/Mf4WAb3Fr2Wrs2wCx1J3hdqsE/IJs
JzoS2gCIlaNE/Q8jLzO997mfN8DeCcLp7X8J+M/0IXnqqwaQukQ92srgA1YT
M03ZDcAm/S02cI2AOwnNvskuaoAE9x3XCesEfD16kduusQFsQvXNbP4x/Nf9
W3+6uwFqnhrGzjI44j+mx/tHGuD9hU0d+w0C3l3JduLfbAN4DP8K7WXwXt/t
vwYWG+Ad1BipbxJw+xM82aWbDUAy2pubyOC8BQHrBI5GeDCcmTzN4OU8EUHP
XY3AFsgpKs0kj5+6I95uKNoIk8XbNG0ZHCIpFSov0wh2JVc4ohn8fVROg/NY
IzSFF94vYLDAy6OrcxqNcHNjOqaOwVYmKgUNuo3QHo7MOhj8nhcc3l9thJ12
XAPtDKa1aooG2TSCp00OXy2Djz270Gfj1Ajbt3juyGOwv6ZBDNxvBCdr3cZw
BjdsXjm/N6ARSLLC+lYM3lluzrQW0QiV77+nSzLY1MumtC+xEdbiLRrHGPt5
e+SW65f0RigEYn0cg0kUJ6n4T43w24GefoLBCtnuo26ljTCvtXK9i6GX9w3v
JP3qRli9P8xyg8H4Pj8Due+NEMVW/HyGoTf7QCD79v5GcL8cwf9/PwxePMNJ
E42Qu/dJeBvDrySDaO86GmO96+d/igwe2/5CIeNPI5SlnXYNZ/grXZ9CesLa
BNI65qQ+hv/uAW/fXudugjOqco57GLzlT87OPZJNMKjVlunPyNOe1jMLIN8E
K+9/BhQw8qaU1v/DTqUJPG//nexdJuA3dbam5uk1wYzsOx0ORj799r727TJp
Au/eduNdjPwmzCtZr9o0QaGs6bIAI98NybaSZ7ya4A37FOfGL0Z/zn+23nrc
BFlxuRETjPPx93TMXHhYE4jVGBYhxvmRnSPm/3jdBCqHxrdZUAh4tKqQ6u36
Jqjcm2EqOUPAs7kKRKI6miCZUh+HTzH0GtfeLPzZBNcfBiQZMc7r7zDPmnV6
E/j8GBQ0H2PMy59tl2IEm+FkXKfTxgABF3kUcuPr7WZ4QH94J44xP5QN9moP
ejRD4Gnh4JdNBPzSgWIpZr9m6PvvRskrxrzxbxmjXohrhgut1NvBjPk0LqLu
PVzWDAbCbtlz5QT8A3Ehgm1HC6ya1X/e+YGAV8WG3ZUWaIFXhqP2UYz5OHBT
zEhftAVsCpf9WDII+A4u/d3JSi1QdneA3MWYr65WH9NkLVug9qDJWa54xjza
tP5yOa8Fzmmc1KE+IuAX9fAArdIWOFo9MPXbh4DfSN2vf7yqBS4k3wr95UXA
Y44Pzwj3tMCehme/u1wJ+Oxdc6Hxfy0QmqwyftKOgL8cvfLIVa8VLm874Rav
Q8CZqy6ciaS0Qr7wcEcYFwEX3PmRy3+5FQq5r39M4SDgBKttP12ZvsNx5p2H
3v1HwM3+1nsY83+HzgEjsdcbcnixolbmHrXvsL3nT5YaTQ63fwfsH8MZrBTm
Ldoih7cEKX2vk24D97+HjLMC5HBV7uYtscpt0IXXPHLylcOzk22Om2u0wZt2
PXTYWw4PzIt6S7/SBrF9wp8inBnr+0jugk/awPsMRlo0YayXebX7Tm8blFKy
vhvLyOFnZgMK/jvTDnUiPUIBLbL4/hjynw+0dkiseznB/1cGx2z8PxQutEPo
fYJ/1IIMbnWU71r5ajvQWGXKtlBl8Jc9qqUtWzrA0UhM8ueIDC64N8yLLtAB
buXKLhdrZXDej1ILStABX7h31CtHy+BsNTcpKLoDsFI5e939Mjh5ZWT4h0In
BDixeuFHpPGMufImrqgu+M9INb1xjfF9ujeLPjnZDYK16YtH0yXxiNsl9m8P
9ICheplHjaUEvqyRM+ng3wvLxa8dmUiiuKdiTbFAdR/8GZiu6jLdi4/k1YR3
iA3AmdlXIqbVgvjane7Uww9+wis+tpLFVH5c5vTWDfvyQSi//LZzjxAPfi5d
7Nbn3cOwj0/wdoXbdvz+3uviYxYjENtaHJa+yobbGihcHbQZgZAWfq/qSTb8
UiBzWK/9CEjF68T8amfDD86+m291HQHOXdkX7n5gw7uLSXhZ0AhAqHT2hhkb
rnDR/Xp87giY8b94cANnxUkPgl+eWx+BbmfRhePxLLgs5cr2Xr1R+HlchjPq
OjNeanwRhRmMgqruzfmTesz4WeIZj1OXR+HhSXu/FVVm3CxK/mem6SgEZRcG
Jgow488UtuV43mDwUnf7g+9M+LRnxQVen1EIeX9uR7MGE/72n3iYXsYo7P8u
Lki22kB83L/Ya/6OApAy+v/c+os6iWFPdf6NwnBjgdis7l8U5yT5X9vmKFyS
eqBNk/+LeJvMWAZYx4Bq78mmuvoH8QbX/qNzjUH4zJJbz7M/aOdayu89EmPw
oaWzdM/nVbRjRmvQQ3cM3N4GOb3kXkGsKDVf4iXjfmddFMqxiAbUNM+PvB6D
rU847CvnF1B+GWU0JW0Mat4kiPL0LyCzL+q8vFljgH8XS1vKWkCfP414MhWO
wW1VPf8O7QVk9VJCdah+DAI3r+5pCv2NSn1yahIWxiDFpNTw9t55FLVy2dJo
eQzqzwRPOW2dRzfurS9x/hkDyy5ftpD5X4jLTe9Q8MYYOIlxla7W/kI3HejP
PLaNw4X4tmfDd38hXpOj+gb7x+GZwOH209F05KhU3r9Ndxz25pt+NOCkIrz9
R26p3jgEGamwwgwF7XL+5X/LYByefE0fulxJQShT8mDtlXGQO5eb9+seBfHt
jnF/bD0O9oyvmsVRMir/Y7d95d442I49u8iJzaHtiEt98u04ND9pkR15TkLW
5od3Pn83DqWbHdku7iRUsnJ24vT7cdAfevNazJCEriv4PHuTMw7yfljCPBcJ
FaVN/DD7Mg7L9y/yHY+YQeZBpS4dzeNwLjSF92zkNMrRsX2LLY+DoAp995fs
SaQkK3YK/oxDcpd2zsPISYRxjf5Ea+OgXrLf19J9ErV3We6uZJqAIXevqHtq
k2jR8lpUNccEOLOInVvqmECn3A0eNeybgASslU98ywRqTzll2qk9AQRzu/oP
XmPomu+/JSOdCVBZTszosBpD49crnnfpToDi4+SrfOfG0OIB1bZugwkosMih
TOweQ0L5ytq9ZhPgyWTX/LVsFNlWyyoNujDqS7MVCbGNoiWy8M7phAkQUw/k
CTIdQvGvZupfJk/AiyVBhccyQ+iofrH/5ZcTMH2aPbBoYxC5FerR8bQJyL45
y44yBxHV+/H31NwJ2BUQ5WS3/BNNsU1HGFZNADakHIDSBtCP/Z+3EakTUOoW
98Rtfx/y7PCt9PjFuN8nvuTPai/iC7zgI70wARLGmFFRZy8ynJ4gJa5OQNyc
E19ZSC9qzRVocGeZhFgvLWznfA+qVXkUIiU0CeTv/zzLv/9AJZfPscRrTsKv
Pge29twuFKpbGixybhI2uSeUr0V1IYuzh9kzdSYh7oBaFrtrF9pydDvnl0uT
sHG2H+8/2oUu8bYJ9JlOgmmaOvNpYicitV+VFnGehKffHO6x9XYg4Uv2hhkv
JqGMT8DyvmQ7omr1dskmTYL3r4SDIdvbEa5+/mpJyiRwnRofd55oQ/Zy0uZ1
byah0JSJe/1RGyraQbMjfZiENNFCdfWi7+hi8z1vWWwSQsb8mIRlW5H/+eA3
xdOTIMYn5f1Irwl1WjlYKMwy6nffn/URb0IH7ukK5ZInIfrIEc7PK42oKY3n
+btfkxAUsRzYnN6I+NdehcT9nQR7q+jhj2sNKPvTF2dXrilQEONTHPtaj9p5
SSdlj00Bp4Kva7ppLRI/3LyadWIK8qa+6jgo1aJ7kFcicXIKlu1Vf1jvrEXC
Tp7yezSmoKm2X2a2oQbZ1TJJcFyYgjW7M+sGajVo9b4QB8lyCuLo+uiSbDUS
G7rQ9y54Cvz3HXyYIF+JwqpO5l8JnYJeu9P85VyV6HeWbMjW8ClY+lZaxkfD
UZU7l5JjzBQo6hUqWn/CkR17Z7Ri6hR4lLHQrAg4yj567VxlwRT4th4wfOCB
IULYrS/DP6dgOrbG+j2pDCXcNY2MGZ4CK5fEXtaiMrRprGN3ZmwKnCJHLlX4
lqH2/TK876en4KllpKcSfxlyK6E5O89PQaqPy2F1rW+oePSe5Pp/06Ar4Tqg
9/UrUj0eFC+kOA0b7FMjTn3FqMdW6NgrpWnYUf79+p/8YuQRldcrenwatoXr
hdQ/LUa5U33CUmrTYBgj7XPoRDHaFy+Xdkx7GtiPNk5SUovQlvmeT5fNpiHt
t4i89t1C1PzxcH1kwDTs82QZYjlbgBx6MAee4GnAgxJzpcQLEOsWY44XT6dh
u9uaSjBzATp1zU/vZcQ0XAjKr2t4ko8KtnZ1fUyYBhnjsfc3g/JQvN2j0fqP
03BxaEDz7atcZLGv7Q9zF6M/4l4XJZEPiEvIvaT8xzSY3pLLI41no0q+XW73
+qbh8kyC2PaP2ejgNnMSaWgaXtibbyaqZCP6wnRPG2ka/svNOo8ss1BA40bR
q41pSBiHhaJvmUipJu2uCfMMvM7Rr/oXkolmME0ZHtYZCLARCMsxzkQXGa/x
oG0zQCfHRirMZ6BdbwRiHflnwGHRWr+NkIGyPQkuKtIzcJ51i0l/eToyu9tx
eEF2BjDB/jPC0emI847nVK78DGw/Nv+qxDYduV8vsxBVnoGlDhWTPxzp6OQF
bd2tGjPwbGH8V8b1NPR9v5XUjyszYICLVHMLvUVLTZHjrk9mQCdn8vlgTCoa
3P7DYT1wBt4YxB12MEhFVRdF6E9DZkDDMvKLx85UFPP949rr8BkIU1N8sjUu
BUl31vO3vpiBlhzr5O2pyciqn/nc4Y8zEJLgP9NTnYg0hXVai3NnYDbWOZMl
PBHJmMdc1sifAda3a/PvjBLR6uA+a5PiGfhGZFNXm0hAcaMnfYKxGciaG1r5
si0B1c3cyxnrnAHVwi8Dio7xKFeKeMT5xwzccqznP60Sj57fZi1d7Z0B7Z4k
y69b45E1Oa6Ge2gGIr+6mPVnPkd/aflD6jMz0L+6dW5kOg7JL89yp6zNAIi/
emjzMBYlsVp5Gh0gQd/BUuFbXZFo48Zu5Y6DJNhfVarxIDQS2VW3L+kfJsEZ
zSFFwqlIpBBw9r4egQR5Wzd5PXMiUMOm1IPzJ0iwJ/P4iWuR4Wjl74L/qYsk
eB5e45fs/AxZmH3SIF4igWb+oQMnZJ+hqm/2zGqGJFh1vJFiTw5FUd79ASpX
SaA8LkJxcQxFB5exYCVrEigES+/icX+Krs4/C5f2JIHvHdEnKCkYVRicvfjB
iwTp5176Tl4PRuIF6zukfEhwSvhO8bNDwYjmcjdK0o8EH7PMhA1Lg1AwxThW
NJQE9rxvectGAlHxzP5EgZckqNTYri+jFYD4hkvSt9SQYMPLvY+10Q9F7fD1
/VpHgu9WcT8anfwQx0lNU6dGErCJqhx9xOOHtiR1cvZ8J4HeWWVCmqUv+m1I
9/7QT4JkrpsfS5geofZaKX0DOgkImX/vXHf1QRcX6YfZfpNAJFT8Bb+4D2oQ
/8patsjQw/wre3K3N0L+WmUSf0kgQ+csYlfzRnkqtpIrrLPgrOPPacR/H0V8
Sl17JTwLoY+mbLhmPRH7oG2P0d5ZYL29zWr2vScK4pD+vFV0FnYvzSV43/RE
D2+V2rtJzoJt56r1p0kPdEfsR4emwizM+5fYaJLd0fkXXNlkrVlgf7/lScdu
N1RT/SPg7flZSJpbZjk+6oo0fr+0vKI7C6q3r4Sf+OCKjuvL8CGDWahJV1jZ
pu7KOP/n/eLMZ8FipXurX68LYvN9YqziNgv5v44VPm5wRMXzlD/IYxYy2zLW
ct0ckZ296Rttr1lgCuJOqt7jiGr05ecuP5yF94SeyCz3OyhIfMjfJZhx3Wso
nkfmNmJtOJHzLnkWqGK3eIpq7FGxWoaB9MtZWN4xtBj/0B7ZfeZeLng9C7w3
6/pPH7VHNSnTGti7Wdhz7Y7eUsZNFOgc39P3aRbMkt/ti4m1Q1v4fjFzVc1C
2qCyOUeULSp8ap4VXzMLkkXmqXUGtsh2ve7invpZUOB+P3+E3xZVTb1KlGqZ
BQ+2E1e5X9mggFJdubM9szA6gk98/WKNmK2yTL3nZsH+UvHNqp1WqKCTd2OD
MgsC/hnjaR8tkfU5v3fB9Fngft28+knLEuEKV2hxi7OgXxJopuFvgR6zsAR9
2piFm6GGAhubZojpg1X+OO8cCEfs73NVNkV1lF6XN7vm4Nri9CO83wRFKBgS
LATn4JyA2x11fxO0u/Tspx9756BiZUS8sPUqItRL5TRIzYE07VC+nPcVZDH1
+33eqTkwoGnd/MZ0mfG+drJ3PD0H78qDntp/MUIkpylJKc05MD+NS+10NkIe
i70ZaTpzYF9KTtMbMkRhLMT0eOM5iHMookg0GqBvYk9fP7gzB9YhR4VbE/WQ
300mq+POczCRmMAnJ6qHND/47F28Owfq/esRRz5eRO0KTi+d781BmPqNZ/zV
uogEhinWj+dAST1gsWLrBSRgtSdBO4HR/8LnA9F92mgwLf4KS/IcJC3t+fGf
jzZKn+LchafOwYjrdp0BYW0k58wUr5I2ByXDHQ2BtlpI89FUrGzuHHA1joe6
MGsi95T8SN6qOdhXdRbkH5xGX9dTnlbVMPpVuFU3Jn8arVuFPHGvn4P6dtqL
rGkN9FTC8l5nyxzcJSXFXzfRQC9zOSzjeudA5O6Z4zphp9AY1/LVMwNzwBEj
5nD4v1PooNuYwe/BOcb8aVtbC1RHBcqlmkbjczCgTrl7PVgN1WI3ZXmpc6DJ
McR577Uq4hAzPFhFn4Pu1Vo79cOqyCBQTdT99xzEmgWxNZSooIFzfPydKwy9
Ql5pcHafQLR2fC12Cxlso7ULyg4cR4ITe5p5BMmQkynsMMejhCy1ttZWCpOh
hW382rkvR1F61m/MbS8ZjjuL5/BYHEWyTo2FHeJk6Ph2ae/PHEV0eskrJVaO
DG7Nx5mJ5kdQiIlt/GkFMngmWxgwbT+CWr7pRc0rksFevuRreLkCuup3IMDw
BBkSyL/33xZVQHe2dt7mOUuGl8vvw8Lm5VD+beKNSi0y+FEP9765IYcWm7Mt
3c6T4bfY2m7mPlnkH+Nv2KFHhpPRJWJP62VQvJCcSqwpGYx5VnfX4IcRUSaU
nceFDLlsFhU2uw6iY927W+NcyWBNOvtvIF8SFTzKiuX3YOxHv+kFRVcSpbfW
CQt6kwF+rq1WhR5AoXfZ5PYHkCGA9ytXFr8EYhZ8Mf82iAxGWR8l9crF0QP8
wBfxpwy94rU8bW6II2ceTTgYQQZXP+9K/KsYMioKMJRLIMM/hw2fDldR1GzO
K5CfRIZXpHEta3FRpMmaPqCQSgaH0wEvnD/uR8evVN5QeksGOxPvCEPffUhk
ZfPeyY9k4K088+2chgiaUfVN0cHI0Dr/4db9o4LIemLH9WacDFN72V8+Kt+N
BsJfSuhVM+r1XtwfrrUbtQyW5xo0kCEEk5jIvC6ACv3+YiadjHo9r/ew5vAj
mUNhgf3dZLgmZjsUdIYfZbQJnTfvJcMy84vh7p98KFFUpcNqkKHvwVm1ej4+
9Kjq/sTNaQbrX7JVTeJBS3e2Zs+QyBBF3OPvo86DXPgSnW6TySBX/U318uRO
ZGP3ZcnpFxk0SI41xGM7kfZ/S1s9/5LhQeJAX/hPTsRzwV02gIsCJ/0/qMnD
NvS2knu7Kg8FFJK7uOVz2ZGCyqfZeT4KlEgGB+wTYUeXpEjvbYQo4MuX9SuJ
dSsK+89K7PQBCkw1nS19vcyKhPzWNlcPUuCiCi8z0YcVZS8lDRccpsAjTfNx
h00WVD/ZlSoqTwHDkPCSk7wsiLVaR4BJlQIJAsPtCcbM6LnqzOJXNQqc5egY
mp1jQuKFQV13gQKn5AsveQQyIY00FDOiSYHl1BPBzF6bmK+/8nakT4GUwnvX
JoPXseWTYkx+Nylwz+UIzy6LFSy4CBtWdqDA3mdPs17XLWP8MhZE6h0KPBWg
JbopLWNHhRMfWLpSoC2fTaRYaAlzXd2xpPaQAk/Q+Xf/2BewzbsfuxZ9KXDj
9Td58YjfWNTMucLcxxT4V30keTfvbyy3J+CuSAgFclJva6gfnMdmi1dn12IY
/SePSC7+pGHesgkNRc8pkBf0Tcl4Bw1jzzia5ZhAgQvWcg4Bp6nYwecudj9T
KZC63zF05hsZs3WbHC57T4GlzHw9GCVh86QnRPcPFBDovaXorUTCHlvvfymd
S4H5WB2JuogZ7I2+2bWUzxTArN6N6+pMY4Ny7V0+FQw/E+4exOgT2Bsyjy8L
ogB392/yO8cJzPbD5YORlRQYF0zkjJwbx2YP9Hq/raNAjNWR37LzY9jynuG9
9e0U2H5ZdWab6ChW1r+/3qCLAjrdm53DdiOYb6KN68APCgxeWbFpjhrGWPmm
qqgDFHC4tdvlzfwgxsNBucU/RYG7ZoFHHH71Y931cjyvZyiQ7x11xu1kP5YU
fLfs0BwFMqeS27vC+rB9zAs7TtIp8GnlgKnOsV5MdvXPZ5s/FHjLG7n8lNiN
0UtOmpPXKKBsrkElS3VjhR6+rPc2KPBAdKvLWmIXpkJnMglloYJvBOVY6+NO
THt663oeJxVizhd3iz5sx7Zl6GSe2EkFlo34e9XM7ViLTfilKl4qtK/WrC8J
tGGXh7jSfuymwpLHxLt6/VbMunuX9roYFRb1mZoS2JqwA3Em9OADVHhvUfgt
UKMRm9FPTuI+RIXM9raShMcNmEuzCFlclgoKxXqqpdz12MMqiRidY1RwsvLx
abKvwU49vqnSdYIK6ZNhxJr6amzLqaxxi5NU4FD8vfs/uWos9Ju0sqsGFVpu
dUetslRhCQVHBhIuUCHlbcyOiUqEXXPxCBTVo4L27Ld6chWGiciWyH7Up8J9
Q5E6tmYi9i7rhD/RmApKQ1MfcHo5VvAaDkxaUeHin7MnG0JKsYUHC1ttbKgg
bzO0owx9xY6ZZJGHblDhXGyxpsbGF6ycm7uo14EKtPiVNv/wEqzu8fDpZncq
EF+RO2QmCjF2yzjJ8/eoIL5SpSCiVYjpqmhvq71PhT9KLsmvcz5j7fOf2rFH
VEgbuNkyGVyA/bT1vV4YQgXVxAaftr5cbB8cOSv/jApTNOWJDyM5mPWeqYO5
4VSQ+e0Vukj9iE13XaRlxlDh4dmzOgKiHzCpAqZO8edUIHFmLUSezcYcI4pL
3rygwrGCfuoX5yzsl6aIb3IKFQI4pfRv/8jEjoq1Wwu8osKwZKt7Km8m5vUv
UPP5Gyp4yYhdbb+Sga2VkLdHZlDBUy7G4TU1HfvvUHnK4zwq/NvYZh1o9RbT
Ybnr96+ACnam96pWo95gESPitg+KqPCs5MXu6DuvMZ6ksMOepVS4c6ApLEn9
JWbseYpzvowKSXyJEU+VUrEEg9+/nIlU8H68I5lXKQUT2WZWequKCs4BQt5s
F5Ow61OcLydrqGDRuE1v6UYill5Z6W9TT4U4jzzx2MAE7NCDw+fMWxj98si5
UPriMUXy6o9LPQw/asOUzHpisXv1ud+a+6jwQzWgukEyFit9Z/3q/E8qMC+W
V2o+jMHULRrszoxSQXBn4JDZ3Sjs8YlH59E4FXZYLdgHqEViVfwKsmpTVPjc
cILLhj8CO9+auKA8R4Uzeu6+q+PPsLAPur2FFCq8Pdv5d2d/KNYavFkmT6dC
5HumuTd9TzGjU7cCDi9S4bE0trb8OxizzD/Gs3eDCmIzZn++RwRgX8xWudqZ
aLBbztzR5MsTjOu/sh2BLDRQV7Jc8iY9xnALdfZZdhoIOhPkcpv8MEH2TbaX
22mwdO3anX9WvphbEc6iz0UDhWvLFUpbHmHiHJqbxXw0KDubz6vi4YM9KGH7
d0uABvbqwf9t0fDGuqzr/woL0UBe6zIxW+g+FvT1wvLjfTQwXlCTKJz3xAZt
dyweFaOBTxz1pjzdA1Pm+j4/LUEDt5tfbNGKOzZtZ0i9eJgGcq/PGHpIuWGn
dvKRN2VocDsmybtV3xVLLO8mFRJo0G+WeUSP+S52ntd0UlCJBseLlSYb/zpi
b4lC483HaKBT3+qjGHsH++Pwc8RPhQYPjO4tdx+/jX1EVj8nT9Eg9Nzy5TNF
9tgWR9H+xNOMeqZti70hNzFzgfGeC5qM/WakfFZzsMN2ON/sLNChwft/BT81
jGwxO8FD7Tcu0mA/QW+h85oNRqwmtQro0+AY+eUxIWdrzEXYqfGRMQ3M3RTH
Cm9bYnW1cvXyJjRYQI1mXe3m2H43es34NRqYdanXFeuaYe317vj56zQYI7Bp
OfmYYFIeStiaDQ3SSFOqedJXsSf7lsvz7GggcBXzDKUYY4r3fL7y36FBwHK3
tOwbIyxM9GRJvRMN+sZ35SdHGWITzeuFD+7SYLwhZ99MuAEWL/44b9STBpfk
w4hW5noYtfV07vP7NDDg7k7fTNPFtH1YPmo/oMHDKLPDXzZ1sJW2kMxcfxoU
dQlLK69rYwYPz7+7HkCDA8usakzJWlj2QY403mAaWKTluU+d18TMfCNfeofR
IFhuJ/Pd4dNYoZR+ikwkQ+9N3yDbKg1se/fOpOFoGoi9Pti5xwmwCun455ov
aKASs/ccz/OTGH/PldiVRBp4XidzdbepYM5Pdkd/TKHBCOVqmd7BE1idbH+E
5SsabI7+KVV+cQzb15cStvMtDbxnrR8b7lHGvAItQqvTaXCY4M3p+fUo1kbY
F+KVSQPu5/du+zooYo+D054MfqTB28JWSRY2BYzz/tYLNp9oMOH5a/EgMwFL
cXDmnc5nPL+cZFm3SxY7aNY1cKeQBk/nYNpZWxor0lV5Ry+mQe6x391fYqUw
DfU3jp5fGX7f0G/UWT6ItRDYlP58o8Gh8nX5YXdJbJqno2YLosG82ONx+Xxx
zJ3leOTTShpc8Z+xSHMSwzYXX17ZUUMDB0WBnIfqoljE9JZ9sXU0kOR6e9zt
9D5MsM9helcjw58KqfxyaREss/F7XkozDR5HCw+vKgljiuVK9/d/p8HJXzn9
1laCmO5rJvbDXQz9OGcM/27dhfVF27d/+kEDcdpeky3BfJjdk5YkxT4atIaU
fBoV5sXm3RVtvg7Q4PWpYgn5hp2Yn13SYbUhGpzfV//hyG5ujOPqxjw+QoN0
n6TfhfU7sMRzdmVa4zT40Jri7vOGAyuQVtDVn2Hk3497van8P0xdJIGve5YG
R6wGwwXXWbEmzvWfphQa7Lxp+VfOnAW7ummTMURj5GlTRE++lxmb+FXvZDtP
g6EPzSeuuTBhruNyyjMLNLDLoIgxndogrnc9/+e4TAMsYUvA3rY1osDX61H3
1hh5yhqsWfRcIb7Lrr369x8NuD7kI+mgJaJCisx+fyY6aHf1rx4oXSBWhMfO
sLDQ4ZkQocWP6zdRx3clP5SNDselxIeWgn4Re1wsvTnZ6bDnHqy3K9KIttbV
GnEcdMjX6dDLfk4mPjob3ZHKzeBI39xTtGniNuWlZFFeOih37V7ZOTZJTDho
bpvJT4fUXHGn5X/jRHHBSmnp3XTw+JB+fOX0GDF/26GFPCE6zNECLz83HiGq
rUWUHxWhg4ioT+Ubh0FiA+V3YOk+OriWFeySKe8nXhk2vaguRoec8Nv+qed6
ieNtGH+VBB3snzweTdv2g3i38sCQ9kE67LDR7Vf+10lcLwzLbJaiw2E+zs3Y
fR3E0IxfzgYydPB/dOu+dfd34q6Eq8d+yNHB9j4hJ+JbMzH9acXGNQU6yPvP
ngyebiASfMTrhxXpMGb941nslTpi+Z3Q6BvKdNCYePjOkrmGeN6CZkI6TodD
/K6PFicrid16xqLOqnSYeP69zXMFEW2gjDSvRgdD7ZYPbQEVRJqC6GcvYOz3
+7Pn7HbfiA/EQ3zWTtPh28USlernX4hb+SmnH2vSIXvTuJ2wvZgYz2bEwXaO
DgX1i47/qj8TRVe+dj7TYejtKBT71TWf+Im0N5XrIh2sBtUWO2tziKGvgq2H
L9GBy3d8NVUsm2hnRJXMM6SD5Db6BS9yBlFj6xWyrzEdLFixL8O704kiFRUF
eiZ0KHx69k7ZiTfEVdcDXnvN6FASpLF/bDiF2CUZcZJqQYfhtbGQ5Z2JxLyB
BSbidTqcvR58+AZ6TgyLNq+LsKXDrySPUJ7BGKK9ZnW4xU06XN78z+5VcQTx
zB9pQ1kHOjRpNDdcswwl7suLE1i/Q4dM5Z4L7a+CiH9s//5sdqaDSnGjU/KN
J8Tu3bZpqa6M/jS2Kviq+RILWhrtHT0Yzy+41bzHz5sY8eSI7EkvOihWW0uN
u3kSHY4lz3P40GGn4/ifKCY3oiaZ6evAQ4Z+GR5B22WciPvfOjz66EcHTXWp
mD3qt4h/jdtPP3hCh56Jk4qyu28Qe7ad2HohiA7SIgYn/6hcJxZib1qEntLh
6kV0NNrxGjHKY2vc7DM6nP+T+r0l0Zh4R+quybcIOnhq9HCsJBkQtYZ6RJ5F
00HVhfXW85cXiKJxp8ZN4+iwt1z3d+cxLeK69vssqRd0kOAx6q5t0yD2rXE6
rybS4fkh/fQfD1SJxQX3FBtS6DByO2VX5lclYszNoZXEV3TYJyvYhgsqEB2F
tYi33tKBeOmZ/4NuKaJ2W27A8Xd0+PhFZj2aSYIoHsR/fut7OhjV1rzW7xMh
bpx4xNmbzfAr4yh3ZNEuYj91ovN9Dh2SXCSyS2R3EovTdZO88ujANvTzHWV4
KzHGpMhS+zODSZcIWs7MRKcdeyQEiulgxsvR8+jQn4rzlQGkqS+MfCTpatrQ
5isOeM19KvlGB1K+UdSIymzFprSRR3AFHe5VZTpG+45VDIx8O3EF0SFG9YLn
p9Heii/xYhsHquiQUjTBw/Rfe0WczrPqxRo6hM8va43tqa1w2fgVWlNPB7X1
Jv/VU+UVF4pML8U3MfKcGV0iceRzhaQDzmfXSgfWW05SyoczK5j2SvUfbafD
9vPuxGnj5IrBjujXLF10uFS2uzXRLrKiNGTlRtcPOpyItnK54fW4Iv7k9cPv
+uhQr8+epfvVrUI3k1B8ZphRP5FDU4JoWFHm3dr4ZJbhHzoVlJPzrzxBTjna
kMLIvye7f8PgWLnb+EtjMTodLAtzRa8MVZZLXXQawRfp8HR/SUl9m3M5K3N3
RswKHbwt+/a3Uo+Uj5acvGP9lw79CvL178eHyiruvJNX+EcHgdtvTN9R9coS
929f2tykw+PVlj+tubcK/wdZZxud
       "]]},
     Annotation[#, "Charting`Private`Tag$19594#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -15.501597247964952`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-15.501597247964952`, -7.025241773162603*^-66}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.700616051063406*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}]]], 
  RowBox[{"26", " ", "y", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}], ")"}], "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"231", " ", 
      SuperscriptBox["x", "4"]}], "+", 
     RowBox[{"5", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"15", "+", 
        RowBox[{"77", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"53", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"15", "+", 
        RowBox[{"154", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"53", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.7006160510668087`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"26", " ", "r", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       SuperscriptBox["r", "2"]]}], ")"}], "9"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"45", " ", 
      SuperscriptBox["r", "2"]}], "+", 
     RowBox[{"231", " ", 
      SuperscriptBox["r", "4"]}], "+", 
     RowBox[{
      SqrtBox[
       SuperscriptBox["r", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"159", " ", 
         SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
  SqrtBox[
   SuperscriptBox["r", "2"]]]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.700616051365205*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6r8ZfJAOtmM69wuOc2DxFx1Kz4/QoS78mPhWp63YV1klXYNJOiwOfu9WFNuE
ndkft/Mnmem3ttWH3pmsWOOOtd9mVKYea1pbUrRZsKsbdqkDdDoIsxyKubT1
H3F0us7VfoYORMX9ltszVol3RuSPTc7Rwc/3gcrnu8vEtc6Y9VsLdLjYL+38
3HGRKFhsE3FvlQ5qu5N5N8rniCmZNVdX1ulwy+i+58LeWaJS4iGRJywMkHwZ
sjgQP00sD4ua3LSJAbr1fooO1+lEbd/F3OAtDGjxp1za00Ihdt+28tnBwYDs
VZF59Ztkor1t1dno7QyY74hXfqI8SXx07mX7Gx4GiCkc35yqO0rcdmw+QZSf
Aadeh/QVRw0T46Qs7NMEGHDTfPqD48IgUXxPhazsbga4pZG5FDgHiLnbpOdy
hBigfZ5zWMCqj3h6Nbzs6H4G/FZnw/Ine4j11NmnJQcYMLJ5x3FyehfR5I+Z
3hkxBvDKKh/tjuskjrRiApUSDGjiSvbqy28nuldIDlyQYoBQzq8Q8flW4lpe
aFqTDAPyYiJDk1qbicGp026XDzHAwLWqUnmmgbgr7qpKlzwDHndP1tkZ1xE/
Pi//d02JASct+02X56qJCg/E6/4cYYDxtDHboaZKYplL8MvrxxigtvUaz39d
OFHLkm5KOs6ACKM09f+EMeJPfWNRt5MMEHe+s1dyopRoB6WkmdMM4NNqGClf
LybSlUS/eQMDqh0eMOKsCokPxZ89WFVnwOfBqDS/jTwiuwBV3U+TuV84vYM4
8JUYu8Vo+5aLDPiwnbWFZSKbKLpY3BGizQCbil/bqryyiNkk4Tfcegx4tATU
QusMYvDbINs/lxgQWf3g5sVLqUQHI9rBHEMGNPx6pXU/MZl4lt2E4mvMgE/3
l/Ye8nxH3F9e/lXflAF/Izz2pZ9PJC7dkfQWNmeAxq0/b22T4oidB8NP0SwZ
QODiHe1zjiHm9M2xEG0YcIC9XWXhbSQx9KVFbbg9A/T+C7L4ZhNOdNSsCrO8
wYBXk9Y306SDiRrLsoZyzgxwYOMtCvcLJB7IiRZcc2EAp/hIkOg1f+Ky/crv
JjcG7Mguf15/zpf4c7d98ps7zH43Zy6uJPgQvzY3ON7yZMBp6Y+6wklexHD/
w3KnvBlwiOPASYKyB9FZJWFm+wMGvI7p8N771pWoSWEp7vuPAaRH7fEj+U5E
kQ/Oj7IeM2DBItyOJeI6ccW4Tf2hPwMufNFfuclrS+zedoJdJ5AB0QEddnkX
zIl52PtmoefM+twTxanXTYgRnuzR5BAGGJaq7eYzNiS6yLibfg9nQLKs9d9K
ui7x/ED3/pCXDNAptfz+yuECUTRabcQsmgEJVVTf4V/qxLUL6RkyrxhQcOf+
3w2d08Te1R1uS/EMsEua1DmspUIs+HrvSH0iU6/Gw//6bx8mRt4YWIx/ywBp
T6vt64KHiLf2nic6fWDAxIl3rY1jksQLrV8CjqcwoIbNvqx2RYQoHiigxZ7O
gJII98Wc83uI/0482tGTyYBlkxsVXRr8xF+00Y70zwzgjrrKiD7BSSz4qPva
O4e5n+kHO1nBzcRI03yrC9+Yfu/w3MVjvF7uyrVPQrCAAb45keapsvPlWhUB
pPEiBljUh3SaytPLJb2nsgu/M/3ct4W6/+R4+YaskWdQOQO2M8bMH7gPlPcN
fj9hgpj6y0nhTN39s7woVuyfZCUDXvD0fXFbbCyP1g6p+lvNjF/cpnesqqL8
9r/p4Oo65jz5YXnxNK2oXCff7FJsIwMsFTKq+ulfyg864zsdWpjxxfX1XX8k
l7MIy/w62sYA76PTKr8vvyrvb3/5blMnA1gjzbeWlgWXlzxbvN7ZxYAbtGHl
6IL/ymNP2RBSehlwZmfhh5Q2t3LdNIUCjT8M0PryONOnT7+81KelwZ/MgKXD
LIdDFpfK4uSPvTSkMuC67c6XpTx/yjxGkozFGAw43opOZfBiZTJ6roP4Xwas
HHAhU3bdLNvM+jM1cpEBwd9GA6zlFMqGCk+52K4wQDYtVrjl4K/ScpcURaV1
5u87rVo5FbVL40U45zc2GGB0koTWKdfz/ge/kO1K
       "]]},
     Annotation[#, "Charting`Private`Tag$20375#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -13.044144302340447`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-13.044144302340447`, -5.911537113376709*^-66}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.700615793653775*^9, {3.700615931829542*^9, 3.700615961749321*^9}, 
   3.7006160184962063`*^9, 3.7006160514077597`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7006156894554*^9, 3.7006157872242203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"kij", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"k", ",", "y"}], "]"}], ",", "y"}], "]"}]}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"k", ",", "x"}], "]"}], ",", "y"}], "]"}]},
      {
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"k", ",", "y"}], "]"}], ",", "x"}], "]"}], 
       RowBox[{"-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"k", ",", "x"}], "]"}], ",", "x"}], "]"}]}]}
     }], "\[NoBreak]", ")"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"krad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", "kij", 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"krad", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7005426324609327`*^9, 3.700542720412627*^9}, {
   3.700542794784051*^9, 3.7005429193039217`*^9}, {3.700543040834688*^9, 
   3.700543050144059*^9}, {3.7005432173237753`*^9, 3.700543244460457*^9}, {
   3.700543344004624*^9, 3.700543370254261*^9}, {3.700543455579693*^9, 
   3.700543499361415*^9}, {3.700543538063908*^9, 3.700543552221962*^9}, {
   3.700543598033662*^9, 3.700543754455112*^9}, {3.700544106354994*^9, 
   3.700544112340137*^9}, {3.70054466896311*^9, 3.700544685596529*^9}, {
   3.700544737338767*^9, 3.700544738948711*^9}, {3.7005447700936613`*^9, 
   3.700544826696013*^9}, {3.700544978815177*^9, 3.700544988419004*^9}, 
   3.7005451397816353`*^9, {3.7005451735893*^9, 3.700545179373169*^9}, {
   3.700545270674322*^9, 3.7005452783385983`*^9}, {3.7005453263235903`*^9, 
   3.700545379579535*^9}, {3.700545416136787*^9, 3.700545417611467*^9}, {
   3.700545552096743*^9, 3.700545558284111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"26", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "20"}], "+", 
             RowBox[{"9", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "24"}], "+", 
             RowBox[{"77", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["y", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"984", "+", 
             RowBox[{"3003", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "20"}], "-", 
             RowBox[{"57", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"152", "+", 
                RowBox[{"539", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["x", "2"], "+", 
                   SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}]}], ",", 
     FractionBox[
      RowBox[{"3432", " ", "x", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "+", 
            RowBox[{"21", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "+", 
            RowBox[{"21", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3432", " ", "x", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "+", 
            RowBox[{"21", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "+", 
            RowBox[{"21", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]], ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"26", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"20", "+", 
             RowBox[{"57", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "24"}], "+", 
             RowBox[{"77", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"984", "+", 
             RowBox[{"3003", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "20"}], "+", 
             RowBox[{"9", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"152", "+", 
                RowBox[{"539", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["x", "2"], "+", 
                   SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615516571734*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"26", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"40", " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"114", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["r", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"72", "-", 
            RowBox[{"231", " ", 
             SqrtBox[
              SuperscriptBox["r", "2"]]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"26", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            SuperscriptBox["r", "2"]]}], ")"}], "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "40"}], " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{
           SqrtBox[
            SuperscriptBox["r", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["r", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"984", "+", 
             RowBox[{"3003", " ", 
              SqrtBox[
               SuperscriptBox["r", "2"]]}]}], ")"}]}]}], ")"}]}], 
       SqrtBox[
        SuperscriptBox["r", "2"]]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615517061221*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
WnL/p7F29dIrAYatw0MSXJYKpuwrcpX/HzeDn/U=
       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]]},
     Annotation[#, "Charting`Private`Tag$4976#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1: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
KzGCv9Xr34jtWdnepkMG3zWPMD+Vyv8BcBAVRA==
       "]]},
     Annotation[#, "Charting`Private`Tag$4976#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-58.39870672845573, 129.9999999999993}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.700615517213409*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.700545628465561*^9, 3.700545651623887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diffx", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"kij", ",", "x"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffxrad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", "diffx", 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"diffxrad", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "->", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7005426324609327`*^9, 3.700542720412627*^9}, {
   3.700542794784051*^9, 3.7005429193039217`*^9}, {3.700543040834688*^9, 
   3.700543050144059*^9}, {3.7005432173237753`*^9, 3.700543244460457*^9}, {
   3.700543344004624*^9, 3.700543370254261*^9}, {3.700543455579693*^9, 
   3.700543499361415*^9}, {3.700543538063908*^9, 3.700543552221962*^9}, {
   3.700543598033662*^9, 3.700543754455112*^9}, {3.700544106354994*^9, 
   3.700544112340137*^9}, {3.70054466896311*^9, 3.700544685596529*^9}, {
   3.700544737338767*^9, 3.700544738948711*^9}, {3.7005447700936613`*^9, 
   3.700544826696013*^9}, {3.700544978815177*^9, 3.700544988419004*^9}, 
   3.7005451397816353`*^9, {3.7005456728826303`*^9, 3.700545718827578*^9}, {
   3.700545793500387*^9, 3.700545891052875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"3432", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "21"}], " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"231", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"17", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"252", " ", 
             SuperscriptBox["y", "2"]}], "+", 
            RowBox[{"13", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"3432", " ", "y", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "231"}], " ", 
           SuperscriptBox["x", "4"]}], "-", 
          RowBox[{"21", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"252", " ", 
              SuperscriptBox["y", "2"]}], "-", 
             RowBox[{"17", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "+", 
             RowBox[{"13", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"3432", " ", "y", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "231"}], " ", 
           SuperscriptBox["x", "4"]}], "-", 
          RowBox[{"21", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"252", " ", 
              SuperscriptBox["y", "2"]}], "-", 
             RowBox[{"17", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "+", 
             RowBox[{"13", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}], ",", 
     
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"10296", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "91"}], " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"112", " ", 
             SuperscriptBox["y", "2"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "+", 
            RowBox[{"13", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70061552253636*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3432", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"13", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]], ",", 
     FractionBox[
      RowBox[{"3432", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"13", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3432", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"13", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]], ",", 
     FractionBox[
      RowBox[{"10296", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"91", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.70061552319659*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7470#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-897.9530458634011, 255.5616018896234}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.700615523349184*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diffy", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"kij", ",", "y"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffyrad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", "diffy", 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"diffyrad", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "->", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7005426324609327`*^9, 3.700542720412627*^9}, {
   3.700542794784051*^9, 3.7005429193039217`*^9}, {3.700543040834688*^9, 
   3.700543050144059*^9}, {3.7005432173237753`*^9, 3.700543244460457*^9}, {
   3.700543344004624*^9, 3.700543370254261*^9}, {3.700543455579693*^9, 
   3.700543499361415*^9}, {3.700543538063908*^9, 3.700543552221962*^9}, {
   3.700543598033662*^9, 3.700543754455112*^9}, {3.700544106354994*^9, 
   3.700544112340137*^9}, {3.70054466896311*^9, 3.700544685596529*^9}, {
   3.700544737338767*^9, 3.700544738948711*^9}, {3.7005447700936613`*^9, 
   3.700544826696013*^9}, {3.700544978815177*^9, 3.700544988419004*^9}, 
   3.7005451397816353`*^9, {3.7005456728826303`*^9, 3.700545704453452*^9}, {
   3.700545913672868*^9, 3.700545947176853*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"10296", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "21"}], " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"91", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "+", 
            RowBox[{"3", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"112", " ", 
             SuperscriptBox["y", "2"]}], "+", 
            RowBox[{"13", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"3432", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "21"}], " ", 
           SuperscriptBox["x", "4"]}], "-", 
          RowBox[{"231", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], "+", 
          RowBox[{
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"17", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"252", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"13", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"3432", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "21"}], " ", 
           SuperscriptBox["x", "4"]}], "-", 
          RowBox[{"231", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], "+", 
          RowBox[{
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"17", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"252", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"13", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}], ",", 
     
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"3432", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "231"}], " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox["y", "2"]}]], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"252", " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"17", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "+", 
            RowBox[{"13", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615528354435*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3432", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"21", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"13", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3432", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"7", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"21", " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{
           SqrtBox[
            SuperscriptBox["r", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"13", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        SuperscriptBox["r", "2"]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3432", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"7", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"21", " ", 
           SuperscriptBox["r", "4"]}], "+", 
          RowBox[{
           SqrtBox[
            SuperscriptBox["r", "2"]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"13", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        SuperscriptBox["r", "2"]]]}], ",", 
     FractionBox[
      RowBox[{"10296", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "7"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"7", " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"91", " ", 
          SuperscriptBox["r", "4"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615529048572*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1: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
PdaUVOOPHljf2yPD29GPnsGeZ+T/B7hPK3s=
       "]], LineBox[CompressedData["
1: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
PdaUVOOPHljf2yPD29GPnsGeZ+T/B7hPK3s=
       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]]},
     Annotation[#, "Charting`Private`Tag$9277#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 396.3674345716682}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.700615529203867*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"laplace", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"kij", ",", "x"}], "]"}], ",", "x"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"kij", ",", "y"}], "]"}], ",", "y"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"laplacerad", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TransformedField", "[", 
    RowBox[{
     RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Polar\>\""}], ",", 
     "laplace", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"laplacerad", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", "->", "0"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7005426324609327`*^9, 3.700542720412627*^9}, {
   3.700542794784051*^9, 3.7005429193039217`*^9}, {3.700543040834688*^9, 
   3.700543050144059*^9}, {3.7005432173237753`*^9, 3.700543244460457*^9}, {
   3.700543344004624*^9, 3.700543370254261*^9}, {3.700543455579693*^9, 
   3.700543499361415*^9}, {3.700543538063908*^9, 3.700543552221962*^9}, {
   3.700543598033662*^9, 3.700543754455112*^9}, {3.700544106354994*^9, 
   3.700544112340137*^9}, {3.70054466896311*^9, 3.700544685596529*^9}, {
   3.700544737338767*^9, 3.700544738948711*^9}, {3.7005447700936613`*^9, 
   3.700544826696013*^9}, {3.700544978815177*^9, 3.700544988419004*^9}, 
   3.7005451397816353`*^9, {3.7005456728826303`*^9, 3.700545704453452*^9}, {
   3.700545913672868*^9, 3.700546003494631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"6864", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "+", 
          RowBox[{
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"93", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "158"}], "+", 
             RowBox[{"147", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["y", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "698"}], "+", 
             RowBox[{"1617", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["x", "2"], "+", 
                  SuperscriptBox["y", "2"]}]]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "214"}], "+", 
                RowBox[{"441", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["x", "2"], "+", 
                   SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"205920", " ", "x", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "18"}], "+", 
            RowBox[{"49", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "18"}], "+", 
            RowBox[{"49", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      RowBox[{"205920", " ", "x", " ", "y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]]}], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "18"}], "+", 
            RowBox[{"49", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "18"}], "+", 
            RowBox[{"49", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]]], 
       RowBox[{"6864", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], ")"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["y", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "158"}], "+", 
             RowBox[{"147", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "698"}], "+", 
             RowBox[{"1617", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"93", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "214"}], "+", 
                RowBox[{"441", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["x", "2"], "+", 
                   SuperscriptBox["y", "2"]}]]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615533574738*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"6864", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "12"}], " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["r", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"158", "-", 
            RowBox[{"147", " ", 
             SqrtBox[
              SuperscriptBox["r", "2"]]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"6864", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           SuperscriptBox["r", "2"]]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "12"}], " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["r", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"93", " ", 
             SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["r", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"698", "-", 
            RowBox[{"1617", " ", 
             SqrtBox[
              SuperscriptBox["r", "2"]]}]}], ")"}]}]}], ")"}]}], 
      SqrtBox[
       SuperscriptBox["r", "2"]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700615534209559*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+h8ij7nO
       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
       "]], LineBox[CompressedData["
1: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
Zvy73YBcY83/AKDJ/Kg=
       "]]},
     Annotation[#, "Charting`Private`Tag$13549#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-13727.999999999874`, 6995.758156914823}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7006155343375063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], ")"}], "10"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"50", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], "+", 
    RowBox[{"210", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "+", 
    RowBox[{"450", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}], "+", 
    RowBox[{"429", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.700542787869755*^9, 3.70054279117286*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], ")"}], "10"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"50", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}], "+", 
    RowBox[{"210", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "+", 
    RowBox[{"450", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]}], "+", 
    RowBox[{"429", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ")"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.70061553450395*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.700546051950988*^9},
 NumberMarks->False],

Cell[BoxData["l"], "Input",
 CellChangeTimes->{3.70061560112829*^9}]
},
WindowSize->{808, 753},
WindowMargins->{{Automatic, -11}, {28, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1410, 33, 56, "Input"],
Cell[1993, 57, 433, 14, 38, "Output"],
Cell[2429, 73, 1167, 40, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3633, 118, 1885, 51, 193, "Input"],
Cell[5521, 171, 1475, 49, 106, "Output"],
Cell[6999, 222, 819, 27, 80, "Output"],
Cell[7821, 251, 17199, 296, 230, "Output"],
Cell[25023, 549, 1477, 49, 106, "Output"],
Cell[26503, 600, 819, 27, 80, "Output"],
Cell[27325, 629, 17213, 296, 230, "Output"]
}, Open  ]],
Cell[44553, 928, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[44670, 933, 2274, 54, 98, "Input"],
Cell[46947, 989, 7390, 228, 446, "Output"],
Cell[54340, 1219, 1999, 66, 158, "Output"],
Cell[56342, 1287, 32965, 559, 226, "Output"]
}, Open  ]],
Cell[89322, 1849, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[89439, 1854, 1613, 35, 102, "Input"],
Cell[91055, 1891, 6185, 196, 403, "Output"],
Cell[97243, 2089, 3192, 103, 314, "Output"],
Cell[100438, 2194, 33686, 570, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134161, 2769, 1623, 35, 102, "Input"],
Cell[135787, 2806, 6186, 196, 361, "Output"],
Cell[141976, 3004, 3283, 105, 314, "Output"],
Cell[145262, 3111, 32356, 548, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177655, 3664, 1855, 44, 124, "Input"],
Cell[179513, 3710, 7745, 242, 444, "Output"],
Cell[187261, 3954, 2005, 67, 158, "Output"],
Cell[189269, 4023, 33736, 571, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223042, 4599, 994, 34, 59, "Input"],
Cell[224039, 4635, 971, 34, 51, "Output"]
}, Open  ]],
Cell[225025, 4672, 89, 2, 32, "Input"],
Cell[225117, 4676, 68, 1, 32, "Input"]
}
]
*)

